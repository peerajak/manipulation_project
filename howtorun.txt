===================== Sim robot ===========
=== Task 1. ===
Terminal 1.
source ~/ros2_ws/install/setup.bash
ros2 launch the_construct_office_gazebo warehouse_ur3e.launch.xml

    Terminal 1.1
    ros2 control list_controllers
        joint_trajectory_controller[joint_trajectory_controller/JointTrajectoryController] active
        joint_state_broadcaster[joint_state_broadcaster/JointStateBroadcaster] active
        gripper_controller  [position_controllers/GripperActionController] active

    Terminal 1.2
    ros2 topic echo /joint_states
        header:
        stamp:
            sec: 463
            nanosec: 300000000
        frame_id: ''
        name:
        - shoulder_pan_joint
        - shoulder_lift_joint
        - elbow_joint
        - wrist_2_joint
        - wrist_3_joint
        - wrist_1_joint
        - robotiq_85_left_knuckle_joint
        position:
        - 9.880466367739871e-05
        - -1.569999877361429
        - -3.382259716744329e-07

Terminal 2.
source install/setup.bash;ros2 launch my_moveit_config move_group.launch.py
Terminal 3.
source install/setup.bash;ros2 launch my_moveit_config moveit_rviz.launch.py
=== Task 2. ===
Terminal 1.
source ~/ros2_ws/install/setup.bash
ros2 launch the_construct_office_gazebo warehouse_ur3e.launch.xml

Terminal 2.
ros2 launch my_moveit_config move_group.launch.py

Terminal 3.
ros2 launch my_moveit_config moveit_rviz.launch.py

Terminal 4.
ros2 launch moveit2_scripts pick_and_place.launch.py

================ Control robot position manually ================
Terminal 1.
source ~/ros2_ws/install/setup.bash
ros2 launch the_construct_office_gazebo warehouse_ur3e.launch.xml

Terminal 2.
ros2 run rqt_joint_trajectory_controller rqt_joint_trajectory_controller

Terminal 3. If Get End effector position
ros2 run tf2_ros tf2_echo base_link tool0

Terminal 4. if Want to know joint positions
ros2 topic echo /joint_states

Open Grip CLI
ros2 action send_goal /gripper_controller/gripper_cmd control_msgs/action/GripperCommand "command:
  position: 0.0
  max_effort: 0.0
"

Close Grip CLI
ros2 action send_goal /gripper_controller/gripper_cmd control_msgs/action/GripperCommand "command:
  position: 0.64
  max_effort: 5.0
"
== Test use of ur3e_helper_scripts move_block package
If so, you just have to use this command to spawn an object of your choice in front of the camera perception area.
ros2 launch ur3e_helper_scripts spawn_grasp_object.launch.py mass:=0.050 xsize:=0.0150 ysize:=0.0250 zsize:=0.0750 color:=random x:=5.2800 y:=-3.8400 z:=0.9550 R:=0.0000 P:=0.0000 Y:=0.0000
================ Real Robot ==================
=== Task 1.5 ====
Terminal 1.
ros2 launch real_moveit_config move_group.launch.py
Terminal 2.
ros2 launch real_moveit_config moveit_rviz.launch.py


=== Task 2.5 ====
Terminal 1.
ros2 launch real_moveit_config move_group.launch.py
Terminal 2.
ros2 launch real_moveit_config moveit_rviz.launch.py
Terminal 3.
ros2 launch moveit2_scripts pick_and_place_realrobot.launch.py



=== Move Block to inital position ===
ros2 launch ur3e_helper_scripts display_current_pose.launch.py use_sim_time:=False
ros2 launch ur3e_helper_scripts move_to_blocks.launch.py use_sim_time:=False
ros2 launch ur3e_helper_scripts setup_grasp_object.launch.py use_sim_time:=False use_block:=True slim_grip:=True 
ros2 launch ur3e_helper_scripts setup_grasp_object.launch.py use_block:=True standing:=True slim_grip:=True
ros2 launch ur3e_helper_scripts setup_grasp_object.launch.py use_block:=True standing:=True wide_grip:=True
ros2 launch ur3e_helper_scripts setup_grasp_object.launch.py use_block:=True lying:=True slim_grip:=True
ros2 launch ur3e_helper_scripts setup_grasp_object.launch.py use_block:=True lying:=True wide_grip:=True
================ Param ================

ros2 service call /move_group/get_parameters rcl_interfaces/srv/GetParameters names:\ ['robot_description_planning.joint_limits.robotiq_85_left_knuckle_joint.max_effort']\
ros2 service call /move_group/list_parameters rcl_interfaces/srv/ListParameters > move_group_param_list.txt
awk 'BEGIN{RS=","}{print $1}' move_group_param_list.txt | grep -i effort > move_group_param_list2.txt
ros2 param set /gripper_controller max_effort 50.0
ros2 param get /gripper_controller max_effort


//========================= CHECKPOINT 14 =======================//
================ Simulation Robot =====================
Terminal 1.
ros2 run simple_grasping basic_grasping_perception_node --ros-args -p debug_topics:=true

Terminal 2
rviz2 -d /home/user/ros2_ws/src/manipulation_project/rviz2_config.rviz

Terminal 3.
source ~/ros2_ws/install/setup.bash
ros2 launch the_construct_office_gazebo warehouse_ur3e.launch.xml

Terminal 4.
ros2 launch my_moveit_config move_group.launch.py

Terminal 5.
ros2 launch my_moveit_config moveit_rviz.launch.py

Terminal 6.
ros2 launch moveit2_scripts pick_and_place_perception.launch.py

================ Real Robot =====================